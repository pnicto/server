generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Taskboard {
  id          Int        @id @default(autoincrement())
  boardTitle  String?    @default("New board")
  Taskcard    Taskcard[]
  User        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  sharedUsers Int[]
  createdAt   DateTime   @default(now())
}

model Taskcard {
  id          Int       @id @default(autoincrement())
  cardTitle   String
  taskBoard   Taskboard @relation(fields: [taskboardId], references: [id], onDelete: Cascade)
  taskboardId Int
  Task        Task[]
  User        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  createdAt   DateTime  @default(now())
}

model Task {
  id              Int      @id @default(autoincrement())
  title           String
  description     String?
  completed       Boolean? @default(false)
  priority        Priority @default(NO_PRIORITY)
  taskCard        Taskcard @relation(fields: [taskcardId], references: [id], onDelete: Cascade)
  taskcardId      Int
  User            User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          Int
  deadlineDate    String?
  eventStartDate  String?
  eventEndDate    String?
  calendarEventId String?
  googleTaskId    String?
  createdAt       DateTime @default(now())
}

model User {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  username     String
  email        String      @unique
  password     String?
  refreshToken String?
  taskboards   Taskboard[]
  tasks        Task[]
  taskcards    Taskcard[]
}

enum Priority {
  HIGH
  MEDIUM
  LOW
  NO_PRIORITY
}
